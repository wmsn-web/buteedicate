<?php /**
 * 
 */
class Unsubscription extends CI_controller
{
	
	function __construct()
	{
		parent::__construct();
	}		

	public function index($subscr_id)
	{
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v1/oauth2/token');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
		curl_setopt($ch, CURLOPT_USERPWD, 'AUvP4ZoWCFrOsT-6xHbEWTzyJKwc5B5JcqAkwHN4KXvsqBJ7M8xh-k_lCTjR8Obs0eTbXGuOEWH6KrOs' . ':' . 'EFCj4vjD9Dr3b12t4qipzk60nZi8xi_rawzaV5tE0YA-OxkGaQgbKMMTtx2rQ7hfNL3H3znPelcP2TYe');
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);

		$headers = array();
		$headers[] = 'Accept: application/json';
		$headers[] = 'Accept-Language: en_US';
		$headers[] = 'Content-Type: application/x-www-form-urlencoded';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		$err = curl_error($ch);
		curl_close($ch); 
		if ($err) {
		  // code...
		  echo 'Error:'.$err; 
		}
		else{
		  $response = json_decode($result); 
		  //var_dump($response); 
		  $access_token = $response->access_token;  
		  //var_dump($access_token); 
		  if ($access_token) {
		    // code...
		    return redirect(base_url('Unsubscription/cancel_sub?token='.$access_token.'&subscr='.$subscr_id));
		  }
		}
	}

	public function cancel_sub()
	{
		$token = $_GET['token'];
		$subscr_id = $_GET['subscr'];
		
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://api-m.sandbox.paypal.com/v1/billing/subscriptions/'.rawurlencode($subscr_id).'/cancel');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);

		$headers = array();
		$headers[] = 'Content-Type: application/json';
		$headers[] = 'Authorization: Bearer '.rawurlencode($token);
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		$err = curl_error($ch);
		curl_close($ch); 
		if ($err) {
		  // code...
		  echo 'Error:'.$err; 
		}
		else {
			$this->db->where("paypal_subscr_id",$subscr_id);
			$this->db->delete("user_subscriptions");
			$this->session->set_flashdata("succMsg","Plan unsubscribed successfully");
			return redirect(back());
		}
		
	}

	public function paypal()
	{
		$data = $this->input->post();
		$data['status'] = 0;

		$this->db->where("email",$data['email']);
		$gt = $this->db->get("users");
		if($gt->num_rows() == 0)
		{
			$this->session->set_flashdata("errMsgUn","Email address not registered with us. Please enter registered email address.");
			return redirect(back());
		}
		else
		{
			$row = $gt->row();
			$this->db->where("user_id",$row->id);
			$sub = $this->db->get("user_subscriptions")->num_rows();
			if($sub == 0)
			{
				$this->session->set_flashdata("errMsgUn","You don't have any subscription!");
				return redirect(back());
			}
			else
			{
				$this->db->where($data);
				$chk = $this->db->get("unsubs_paypal")->num_rows();
				if($chk > 0)
				{
					$this->session->set_flashdata("errMsgUn","Request already exists!");
					return redirect(back());
				}
				else
				{
					$this->db->insert("unsubs_paypal",$data);
					$this->session->set_flashdata("succMsgUn","Request sent successfully. You will be notified by email with unsubscription confirmation within 48 hours.");
					return redirect(back());
				}
			}
		}

				
	}

	public function emailx()
	{
		$data = $this->input->post();
		$this->db->where($data);
		$this->db->delete("email_subscribers");
		$this->session->set_flashdata("succMsgUn","Unsibscribed successfully.");
		return redirect(back());
	}
}